generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OWNER
  FINANCE
  AUDITOR
  VIEWER
}

enum DataSourceKind {
  TINY
  CSV
  WEBHOOK
}

enum PCGType {
  REVENUE
  DEDUCTION
  COGS
  OPEX
  OTHER
  INCOME
  EXPENSE
  TAX
  RESULT
}

model Tenant {
  id           String        @id @default(cuid())
  name         String
  cnpj         String?
  users        UserTenant[]
  dataSources  DataSource[]
  accounts     Account[]
  pcgAccounts  PCGAccount[]
  mappings     Mapping[]
  transactions Transaction[]
  invoices     Invoice[]
  orders       Order[]
  fxRates      FXRate[]
  dreSnapshots DRESnapshot[]
  tinyConfig   TinyIntegrationConfig?
  createdAt    DateTime      @default(now())
}

model User {
  id        String       @id @default(cuid())
  email     String       @unique
  name      String
  tenants   UserTenant[]
  createdAt DateTime     @default(now())
}

model UserTenant {
  id       String   @id @default(cuid())
  user     User     @relation(fields: [userId], references: [id])
  userId   String
  tenant   Tenant   @relation(fields: [tenantId], references: [id])
  tenantId String
  role     Role
}

model DataSource {
  id           String        @id @default(cuid())
  tenant       Tenant        @relation(fields: [tenantId], references: [id])
  tenantId     String
  code         String
  name         String
  kind         DataSourceKind
  level        Int
  parentId     String?
  pcgAccount   PCGAccount?   @relation(fields: [pcgAccountId], references: [id])
  pcgAccountId String?
}

model Account {
  id        String     @id @default(cuid())
  tenant    Tenant     @relation(fields: [tenantId], references: [id])
  tenantId  String
  code      String
  name      String
  parentId  String?
}

model PCGAccount {
  id          String        @id @default(cuid())
  tenant      Tenant        @relation(fields: [tenantId], references: [id])
  tenantId    String
  code        String
  name        String
  type        PCGType
  parentId    String?
  dataSources DataSource[]
}

model Mapping {
  id        String     @id @default(cuid())
  tenant    Tenant     @relation(fields: [tenantId], references: [id])
  tenantId  String
  accountId String
  rules     Json
  pcgId     String
}

model Transaction {
  id          String   @id @default(cuid())
  tenant      Tenant   @relation(fields: [tenantId], references: [id])
  tenantId    String
  date        DateTime
  accrualDate DateTime?
  debit       String
  credit      String
  amount      Decimal
  currency    String   @default("BRL")
  memo        String?
  origin      String   // ex.: "ERP:Tiny:orders", "ERP:Tiny:financial"
  sourceRef   String?  // referência única do Tiny
  meta        Json?
  @@unique([tenantId, origin, sourceRef])
  @@index([tenantId, date])
}

model FXRate {
  id       String   @id @default(cuid())
  tenant   Tenant   @relation(fields: [tenantId], references: [id])
  tenantId String
  date     DateTime
  from     String
  to       String
  rate     Decimal
}

model DRESnapshot {
  id        String   @id @default(cuid())
  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  tenantId  String
  period    String
  basis     String
  currency  String
  values    Json
  createdAt DateTime @default(now())
}

model TinyIntegrationConfig {
  id            String   @id @default(cuid())
  tenant        Tenant   @relation(fields: [tenantId], references: [id])
  tenantId      String   @unique
  token         String
  modules       String[]
  enabled       Boolean  @default(true)
  lastSyncAt    DateTime?
  nextSyncAt    DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  syncFrequency Int      @default(1440) // minutes between runs (default 24h)
}

model Invoice {
  id         String   @id @default(cuid())
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  tenantId   String
  number     String
  issueDate  DateTime
  total      Decimal
  externalId String   // identificador da nota no Tiny
  origin     String   @default("ERP:Tiny:invoice")
  sourceRef  String?
  @@unique([tenantId, externalId])
}

model Order {
  id         String   @id @default(cuid())
  tenant     Tenant   @relation(fields: [tenantId], references: [id])
  tenantId   String
  number     String
  issueDate  DateTime
  total      Decimal
  externalId String   // identificador do pedido no Tiny
  origin     String   @default("ERP:Tiny:order")
  sourceRef  String?
  @@unique([tenantId, externalId])
}
